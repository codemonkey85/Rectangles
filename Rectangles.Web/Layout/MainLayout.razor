@inherits LayoutComponentBase

@* Required *@
<MudThemeProvider @ref="@mudThemeProvider"
                  @bind-IsDarkMode="@isDarkMode" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense>
        <MudText Typo="@Typo.h4"
                 Class="d-none d-lg-flex">
            @AppTitle
        </MudText>
        <MudText Typo="@Typo.h6"
                 Class="d-none d-md-flex d-lg-none">
            @AppTitle
        </MudText>
        <MudText Typo="@Typo.inherit"
                 Class="d-xs-flex d-md-none">
            @AppShortTitle
        </MudText>
        <MudSpacer />
        <MudStack Row>
            <MudSwitch @bind-Value="@isDarkMode"
                       Color="@Color.Primary"
                       Label="@(isDarkMode ? "Dark" : "Light")" />
            <MudButton Class="d-none d-md-flex"
                       EndIcon="@Icons.Custom.Brands.GitHub"
                       Href="@GitHubRepoLink"
                       Target="_blank"
                       title="@GitHubTooltip"
                       Color="@Color.Inherit"
                       Variant="@Variant.Outlined">
                Source code on GitHub
            </MudButton>
            <MudIconButton Class="d-md-none"
                           Icon="@Icons.Custom.Brands.GitHub"
                           Href="@GitHubRepoLink"
                           Target="_blank"
                           title="@GitHubTooltip"
                           Color="@Color.Inherit"
                           Variant="@Variant.Outlined" />
        </MudStack>
    </MudAppBar>
</MudLayout>

<MudMainContent>
    <MudContainer MaxWidth="@MaxWidth.False">
        @Body
    </MudContainer>
</MudMainContent>

@code {
    private const string AppTitle = "Rectangles";
    private const string AppShortTitle = "Rectangles";

    [StringSyntax(StringSyntaxAttribute.Uri)]
    private const string GitHubRepoLink = "https://github.com/codemonkey85/Rectangles";

    private const string GitHubTooltip = "Source code on GitHub";

    private bool isDarkMode;
    private MudThemeProvider? mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender || mudThemeProvider is null)
        {
            return;
        }

        isDarkMode = await mudThemeProvider.GetSystemDarkModeAsync();
        await mudThemeProvider.WatchSystemDarkModeAsync(OnSystemPreferenceChanged);
        StateHasChanged();
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
